/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>
#include <CoreGraphics/CoreGraphics.h>

typedef enum SSColorSchemeType
{
  SSColorSchemeType_Dark,
  SSColorSchemeType_Light,
} SSColorSchemeType;

typedef struct SSMetalBackendContext SSMetalBackendContext;

typedef struct SSRootScene SSRootScene;

/**
 * A simple pain-free pointer to wrap your types in for FFI export.
 */
typedef struct SSPointer_RootScene
{
  struct SSRootScene *ptr;
} SSPointer_RootScene;

typedef struct SSPointer_RootScene SSRootScenePointer;

typedef struct SSPoint
{
  float x;
  float y;
} SSPoint;

typedef struct SSForce
{
  float value;
  bool ignore;
} SSForce;

typedef struct SSSamplePoint
{
  struct SSPoint point;
  struct SSForce force;
} SSSamplePoint;

/**
 * A simple pain-free pointer to wrap your types in for FFI export.
 */
typedef struct SSPointer_MetalBackendContext
{
  struct SSMetalBackendContext *ptr;
} SSPointer_MetalBackendContext;

typedef struct SSPointer_MetalBackendContext SSMetalBackendContextPointer;

typedef struct SSFrameSize
{
  float width;
  float height;
} SSFrameSize;

typedef struct SSViewInfo
{
  struct SSFrameSize size;
  enum SSColorSchemeType preferred_color_scheme;
} SSViewInfo;

SSRootScenePointer root_scene_new(void);

void root_scene_free(SSRootScenePointer ptr);

void root_scene_begin_stroke(SSRootScenePointer ptr);

void root_scene_record_stroke_sample(SSRootScenePointer ptr, struct SSSamplePoint sample);

void root_scene_end_stroke(SSRootScenePointer ptr);

SSMetalBackendContextPointer metal_backend_context_init(void *device, void *queue);

void metal_backend_context_reload_view_surface(SSMetalBackendContextPointer metal_backend_context_ptr,
                                               const void *view);

void draw_flush_and_submit_background(SSMetalBackendContextPointer metal_backend_context_ptr,
                                      SSRootScenePointer root_scene_ptr,
                                      const void *view,
                                      struct SSViewInfo view_info);
